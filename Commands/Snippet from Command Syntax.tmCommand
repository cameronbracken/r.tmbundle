<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/ruby
require ENV['TM_SUPPORT_PATH'] + "/lib/exit_codes.rb"
require ENV['TM_SUPPORT_PATH'] + "/lib/escape.rb"
require ENV['TM_SUPPORT_PATH'] + "/lib/dialog.rb"
require 'pp'
text = STDIN.read
file = `find /Library/Frameworks/R.framework/Versions/Current/Resources/library -name #{text}.tex -print`.chomp
if file.empty?
  resources = `grep -r --include CONTENTS #{text.gsub(".","\\.")} /Library/Frameworks/R.framework/Versions/Current/Resources/library/*`
  resources=resources.split("\n").grep(/Aliases/).map do |match|
    match.gsub(/CONTENTS.*/,"CONTENTS")
  end.uniq
  files = []
  resources.each do |filename|
    data = File.read(filename)
	  data.split("\n\n").each do |part|
	    if part =~ /Aliases:(?: [\w.]+)* #{text.gsub(".","\\.")}/ then
        pp part
        matchfile = part.sub(/.*Entry: ([\w.]+).*/m,'\1')
        files &lt;&lt; `find /Library/Frameworks/R.framework/Versions/Current/Resources/library -name #{matchfile}.tex -print`.chomp
      end
		end
	end
	TextMate.exit_discard if files.empty?
else
  files = [file]
end
results = []
files.each do |file|
  tex = File.read(file)
  results &lt;&lt; tex.scan(/\\begin\{verbatim\}\n(.*)\\end\{verbatim\}/m)[0][0].split("\n\n").map{|line| line.gsub(/\n|(  )/,"")}
end
results.flatten!
if results.length==1 then
  line=results[0]
else
  line = Dialog.request_item :title =&gt; "Snippet for Command", :prompt =&gt; "There were more than one matching commands found", :items =&gt; results
  TextMate.exit_discard if line.nil?
end
line = line.sub(/.*?(?=[\w.]+\()/, "")
snippet_counter = 0
result = line.gsub(/[(,]\s*[\w.]+\s*(?:=\s*(?:"((?:\\\\|\\[^\\]|[^"\\]+)*)"|([^\s,]+))\s*)?/) do |match|
  snippet = match[0] == ?( ? "(${#{snippet_counter += 1}:#{e_sn(match[1..-1])}}" :
                             "${#{snippet_counter += 1}:#{e_sn(match)}}"
  value = $1 || $2
  if value &amp;&amp; ( snippet =~ /^([^"]+").+("\s*\})$/ ||
                snippet =~ /^([^=]+=\s*).+?(\s*\})$/ )
    $1 + "${#{snippet_counter += 1}#{':' if value != ''}#{e_sn(value)}}" + $2
  else
    snippet
  end
end
print result
</string>
	<key>fallbackInput</key>
	<string>word</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^H</string>
	<key>name</key>
	<string>Insert Command Template</string>
	<key>output</key>
	<string>afterSelectedText</string>
	<key>scope</key>
	<string>source.r</string>
	<key>uuid</key>
	<string>4D425A1D-E272-4355-8041-311DD4486809</string>
</dict>
</plist>
